
//gf_DE60CDEF(int lp_5962A3E0)
//等级显示与升级所需经验进度条更新函数
void updateExpBar(int player,unit inUnit)
{
    fixed levelExp;
    fixed exp;
    int level;

    //等级显示
    libNtve_gf_SetDialogItemText(gv_5C4043F8.lv_75EF4F32, (IntToText(UnitLevel(inUnit))
     + StringExternal("Param/Value/E919CF14")), 
     PlayerGroupSingle(EventPlayer()));
    
    //获得当前等级对应的经验
    for (level = 1 ; level <= UnitLevel(inUnit); level += 1){
        levelExp += gf_8EF92EC0(level);
    }

    //计算经验差
    exp = -(UnitXPTotal(inUnit) - levelExp);

    //更新进度条
    if ((exp == 0))
    {
        DialogControlSetSize(gv_5C4043F8.lv_E25A8ED0, PlayerGroupSingle(player), 1, 16);
    }
    else
    {
        DialogControlSetSize(gv_5C4043F8.lv_E25A8ED0, PlayerGroupSingle(player), FixedToInt(exp), 16);
    }
}

//gf_91088DA7
//显示英雄升级时可以升级的技能
void showSkillUpgradeBtn(int player,unit inUnit){

 
    DialogControlSetEnabled(gv_99F9B79B[0], PlayerGroupSingle(ePlayer), true);
    DialogControlSetEnabled(gv_99F9B79B[1], PlayerGroupSingle(ePlayer), true);
    DialogControlSetEnabled(gv_99F9B79B[2], PlayerGroupSingle(ePlayer), true);
    DialogControlSetEnabled(gv_99F9B79B[3], PlayerGroupSingle(ePlayer), true);
    DialogControlSetVisible(gv_81AD7FB9[lv_AD3D5FED], PlayerGroupSingle(ePlayer), true);
    DialogControlSetVisible(gv_99F9B79B[lv_AD3D5FED], PlayerGroupSingle(ePlayer), true);
}

void initGlobalValues(){
    gv_heroEstatStr[0] = "dbup_e_stat_str_01";
    gv_heroEstatStr[1] = "dbup_e_stat_str_06";
    gv_heroEstatStr[2] = "dbup_e_stat_str_11";
    gv_heroEstatStr[3] = "dbup_e_stat_str_16";
    gv_heroEstatStr[4] = "dbup_e_stat_str_21";
    gv_heroEstatStr[5] = "dbup_e_stat_str_26";
    gv_heroEstatStr[6] = "dbup_e_stat_str_31";
    gv_heroEstatStr[7] = "dbup_e_stat_str_36";
    gv_heroEstatStr[8] = "dbup_e_stat_str_41";
    gv_heroEstatStr[9] = "dbup_e_stat_str_46";
}