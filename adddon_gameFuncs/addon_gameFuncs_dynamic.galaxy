//GongSunink 2022

//原图在设计上没有考虑一个玩家多个英雄不同英雄等级、不同技能等级
//在不修改原图的情况下,两种解决方案:
//1.动态更新，原图测试模式下已经实现了一个简易的动态切换
//2.重新设计一套系统

//需要更新的数据：
//游戏过程中使用的唯一对应键值，如玩家的英雄id、英雄单位
//英雄等级、英雄技能等级、升级科技
//behavior、effect

//-----------------------------------data------------------------------------------

//玩家选择不同单位，动态切换全局变量
//gv_131E8983 player : heroid
//gv_71C054E5 player : herounit
//gv_893C301B player : level
//gv_5DDEB9BD player-(hero_skillindex) : 1/0 
//gv_63B35897 player : upgrade-points
//gv_D0B36B8F player-(hero-skillindex+1) : level
//gv_203166CD player-(hero-skillindex) : last-upgrade-player-level
//gv_9CB902A4 player-propertyid : value
//gv_26FF03B5 player ：last-upgrade-skill-index
void saveDataForUnitLastSelected(){
    int ePlayer = EventPlayer();
    unit eUnit = EventUnit();
    int eUnitLevel = UnitLevel(eUnit);
    unit lastUnit = gv_71C054E5[ePlayer];

    int i;

    for (i = 0 ; i < 4 ; i += 1){
        setHeroSkillLearnStat(lastUnit,i,gv_5DDEB9BD[ePlayer][i]);
    }

    setPlayerUpgradePoints(ePlayer,gv_63B35897[ePlayer]);

    for (i = 0 ; i < 4 ; i += 1){
        setHeroSkillLevel(lastUnit,i + 1,gv_D0B36B8F[ePlayer][i + 1]);
    }

    for (i = 0 ; i < 4 ; i += 1){
        setHeroSkillLastUpgradeLevel(lastUnit,i + 1,gv_203166CD[ePlayer][i]);
    }

    for (i = 0 ; i < 15 ; i += 1){
        setHeroPropert(lastUnit,i,gv_9CB902A4[ePlayer][i]);
    }

    setHerolastUpgradeSkillIndex(eUnit,gv_26FF03B5[ePlayer]);    
}

void updateDataForCurrSelectingUnit(){
    int ePlayer = EventPlayer();
    unit eUnit = EventUnit();
    int eUnitLevel = UnitLevel(eUnit);
    unit lastUnit = gv_71C054E5[ePlayer];

    int i;

    //可改为dataTable存储所有heroTypeName对应的id
    gv_131E8983[ePlayer] = StringToInt(StringSub(UnitGetType(eUnit),7,8));

    gv_71C054E5[ePlayer] = eUnit;
      
    gv_893C301B[ePlayer] = eUnitLevel;
  
    for (i = 0 ; i < 4 ; i += 1){
        gv_5DDEB9BD[ePlayer][i] = getHeroSkillLearnStat(eUnit,i);   
    }
  
    gv_63B35897[ePlayer] = getPlayerUpgradePoints(ePlayer);
  
      
    for (i = 0 ; i < 4 ; i += 1){
        gv_D0B36B8F[ePlayer][i + 1] = getHeroSkillLevel(eUnit,i);
    }
  
    for (i = 0 ; i < 4 ; i += 1){
        gv_203166CD[ePlayer][i] = getHeroSkillLastUpgradeLevel(eUnit,i);
    }
  
    for (i = 0 ; i < 15 ; i += 1){
        gv_9CB902A4[ePlayer][i] = getHeroPropert(lastUnit,i);
    }
  
    gv_26FF03B5[ePlayer] = getHerolastUpgradeSkillIndex(eUnit);
}

void dynamicSwitchData(){
    saveDataForUnitLastSelected();
    updateDataForCurrSelectingUnit();
}

//-----------------------------------upgrades------------------------------------------

//注册一个科技到动态切换列表中
void registerDynamicUpgrade(string inTech){
    setUpgrade(inTech);
}

//封装TechTreeUpgradeAddLevel,每一个单位对应的科技会被记录，切换单位时会重新同步
void TechTreeUpgradeSetDynamicLevel(int inPlayer, unit inUnit, string inUpgrade, int level){
    //1.添加对应科技给对应玩家
    libNtve_gf_SetUpgradeLevelForPlayer(inPlayer, inUpgrade, level);

    //2.判断升级是否存在于全局科技表
    if (getUpgradeRegisteredIndex(inUpgrade) != 0){
        //2-1.存在此科技
        setUnitUpgradeDynamicLevel(inUnit,inUpgrade,level);
    }else{
        //2-2.不存在此科技
        
        //2-2-1注册科技到全局表中
        registerDynamicUpgrade(inUpgrade);
        
        //2-2-2记录
        setUnitUpgradeDynamicLevel(inUnit,inUpgrade,level);
    }
    
}   

//1.保存原有科技等级
//2.更新现有科技等级
void dynamicSwitchUpgradeTree(){
    int ePlayer = EventPlayer();
    unit eUnit = EventUnit();
    int eUnitLevel = UnitLevel(eUnit);
    unit lastUnit = gv_71C054E5[ePlayer];

    string currUpgrade;
    int i;

    for (i = 1 ; i < getUpgradeRegisteredIndexGlobal() ; i += 1){
        currUpgrade = getUpgradeRegisteredIndex(i);
        setUnitUpgradeDynamicLevel(eUnit,currUpgrade,TechTreeUpgradeCount(ePlayer,currUpgrade,c_techCountCompleteOnly));
    }

    for (i = 1 ; i < getUpgradeRegisteredIndexGlobal() ; i += 1){
        currUpgrade = getUpgradeRegisteredIndex(i);
        setUnitUpgradeDynamicLevel(1,currUpgrade,getUpgradeRegisteredLevel(eUnit,currUpgrade));
    }
}

//初始化一些全局变量
void initGlobalValues(){
    gv_heroEstatStr[0] = "dbup_e_stat_str_01";
    gv_heroEstatStr[1] = "dbup_e_stat_str_06";
    gv_heroEstatStr[2] = "dbup_e_stat_str_11";
    gv_heroEstatStr[3] = "dbup_e_stat_str_16";
    gv_heroEstatStr[4] = "dbup_e_stat_str_21";
    gv_heroEstatStr[5] = "dbup_e_stat_str_26";
    gv_heroEstatStr[6] = "dbup_e_stat_str_31";
    gv_heroEstatStr[7] = "dbup_e_stat_str_36";
    gv_heroEstatStr[8] = "dbup_e_stat_str_41";
    gv_heroEstatStr[9] = "dbup_e_stat_str_46";

    empText = StringToText("");
}
